'use strict';

const auth = require('basic-auth');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e["default"] : e; }

const auth__default = /*#__PURE__*/_interopDefaultLegacy(auth);

function vitePluginHttpBasicAuth(users, config) {
  console.log(`[vite-plugin-http-basic-auth] Initializing with ${users.length} users`);
  if (!users || users.length === 0) {
    console.warn("[vite-plugin-http-basic-auth] No users defined for vite-plugin-http-basic-auth!");
  }
  users.filter((user, index) => {
    if (!user.username || !user.password) {
      console.warn(`[vite-plugin-http-basic-auth] User on index ${index} does not have defined username and/or password! Ignoring.`);
      return false;
    }
    return true;
  });
  function authMiddleware(req, res, next) {
    const user = auth__default(req);
    if (!user || !user.name || !user.pass) {
      return unauthorized(res, config?.realm || "Authentication required");
    }
    if (!users.find((u) => u.username === user.name && u.password === user.pass)) {
      return unauthorized(res, config?.realm || "Authentication required");
    }
    next();
  }
  return {
    name: "vite-plugin-http-basic-auth",
    enforce: "pre",
    apply: "serve",
    configureServer(server) {
      if (config?.useInServer === void 0 || config?.useInServer)
        server.middlewares.use(authMiddleware);
    },
    configurePreviewServer(server) {
      if (config?.useInServer === void 0 || config?.useInPreview)
        server.middlewares.use(authMiddleware);
    }
  };
}
function unauthorized(res, realm) {
  res.statusCode = 401;
  res.setHeader("WWW-Authenticate", 'Basic realm="' + realm + '"');
  res.end("Unauthorized");
}

module.exports = vitePluginHttpBasicAuth;
