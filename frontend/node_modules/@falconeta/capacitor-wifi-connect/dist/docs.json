{
  "api": {
    "name": "CapacitorWifiConnectPlugin",
    "slug": "capacitorwificonnectplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "checkPermission",
        "signature": "() => Promise<{ value: PermissionState; }>",
        "parameters": [],
        "returns": "Promise<{ value: PermissionState; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method that check if the app has autorization or not to use the location capability.",
        "complexTypes": [
          "PermissionState"
        ],
        "slug": "checkpermission"
      },
      {
        "name": "requestPermission",
        "signature": "() => Promise<{ value: PermissionState; }>",
        "parameters": [],
        "returns": "Promise<{ value: PermissionState; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method that request (if the status of authorization is prompt) autorization to use the location capability.",
        "complexTypes": [
          "PermissionState"
        ],
        "slug": "requestpermission"
      },
      {
        "name": "disconnect",
        "signature": "() => Promise<{ value: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ value: boolean; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method that disconnects from the wifi network if the network was connected to using one of the connect methods.",
        "complexTypes": [],
        "slug": "disconnect"
      },
      {
        "name": "getSSIDs",
        "signature": "() => Promise<{ value: string[]; status: ConnectState; }>",
        "parameters": [],
        "returns": "Promise<{ value: string[]; status: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "5.1.0"
          }
        ],
        "docs": "ONLY ANDROID\nreturns the current SSID connected by Application\nWARNING: app is restricted to 4 scans every 2 minutes",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "getssids"
      },
      {
        "name": "getAppSSID",
        "signature": "() => Promise<{ value: string; status: ConnectState; }>",
        "parameters": [],
        "returns": "Promise<{ value: string; status: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "5.1.0"
          }
        ],
        "docs": "returns the current SSID connected by Application",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "getappssid"
      },
      {
        "name": "getDeviceSSID",
        "signature": "() => Promise<{ value: string; status: ConnectState; }>",
        "parameters": [],
        "returns": "Promise<{ value: string; status: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "5.1.0"
          }
        ],
        "docs": "iOS >= 14, Android >=9:\n\nreturns the current SSID connected by device",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "getdevicessid"
      },
      {
        "name": "connect",
        "signature": "(options: { ssid: string; saveNetwork?: boolean; }) => Promise<{ value: ConnectState; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ ssid: string; saveNetwork?: boolean | undefined; }"
          }
        ],
        "returns": "Promise<{ value: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method attempts to connect to wifi matching explicitly the ssid parameter\nWARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "connect"
      },
      {
        "name": "prefixConnect",
        "signature": "(options: { ssid: string; saveNetwork?: boolean; }) => Promise<{ value: ConnectState; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ ssid: string; saveNetwork?: boolean | undefined; }"
          }
        ],
        "returns": "Promise<{ value: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method attempts to connect to the nearest wifi network with the ssid prefix matching the ssidPrefix parameter.\nWARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "prefixconnect"
      },
      {
        "name": "secureConnect",
        "signature": "(options: { ssid: string; password: string; saveNetwork?: boolean; isWep?: boolean; }) => Promise<{ value: ConnectState; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ ssid: string; password: string; saveNetwork?: boolean | undefined; isWep?: boolean | undefined; }"
          }
        ],
        "returns": "Promise<{ value: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method attempts to connect to wifi matching explicitly the ssid parameter.\nThis will fail if the password doesn't match or the isWep parameter isn't set correctly.\nAndroid does not support WEP Networks.\nWARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "secureconnect"
      },
      {
        "name": "securePrefixConnect",
        "signature": "(options: { ssid: string; password: string; saveNetwork?: boolean; isWep?: boolean; }) => Promise<{ value: ConnectState; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ ssid: string; password: string; saveNetwork?: boolean | undefined; isWep?: boolean | undefined; }"
          }
        ],
        "returns": "Promise<{ value: ConnectState; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "method attempts to connect to the nearest\nwifi network with the ssid prefix matching the ssidPrefix parameter.\nThis will fail if the password doesn't match or the isWep parameter\nisn't set correctly. Android does not support WEP Networks.\nWARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)",
        "complexTypes": [
          "ConnectState"
        ],
        "slug": "secureprefixconnect"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": [
    {
      "name": "ConnectState",
      "slug": "connectstate",
      "members": [
        {
          "name": "Ok",
          "value": "0",
          "tags": [],
          "docs": ""
        },
        {
          "name": "Denied",
          "value": "-1",
          "tags": [],
          "docs": ""
        },
        {
          "name": "Ko",
          "value": "-2",
          "tags": [],
          "docs": ""
        },
        {
          "name": "UnknowSsid",
          "value": "-3",
          "tags": [],
          "docs": ""
        },
        {
          "name": "WifiDisabled",
          "value": "-4",
          "tags": [],
          "docs": ""
        },
        {
          "name": "AppLocalizationPermission",
          "value": "-5",
          "tags": [],
          "docs": ""
        },
        {
          "name": "SystemLocalizationPermission",
          "value": "-6",
          "tags": [],
          "docs": ""
        }
      ]
    }
  ],
  "typeAliases": [
    {
      "name": "PermissionState",
      "slug": "permissionstate",
      "docs": "",
      "types": [
        {
          "text": "'prompt'",
          "complexTypes": []
        },
        {
          "text": "'prompt-with-rationale'",
          "complexTypes": []
        },
        {
          "text": "'granted'",
          "complexTypes": []
        },
        {
          "text": "'denied'",
          "complexTypes": []
        }
      ]
    }
  ],
  "pluginConfigs": []
}