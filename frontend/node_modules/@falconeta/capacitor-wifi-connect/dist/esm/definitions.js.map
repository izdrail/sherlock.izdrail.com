{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AA8FA,MAAM,CAAN,IAAY,YAQX;AARD,WAAY,YAAY;IACtB,2CAAM,CAAA;IACN,oDAAW,CAAA;IACX,4CAAO,CAAA;IACP,4DAAe,CAAA;IACf,gEAAiB,CAAA;IACjB,0FAA8B,CAAA;IAC9B,gGAAiC,CAAA;AACnC,CAAC,EARW,YAAY,KAAZ,YAAY,QAQvB","sourcesContent":["import { PermissionState } from '@capacitor/core';\nexport interface CapacitorWifiConnectPlugin {\n  /**\n   * method that check if the app has autorization or not to use the location capability.\n   * @since 1.0.0\n   */\n  checkPermission(): Promise<{ value: PermissionState }>;\n\n  /**\n   * method that request (if the status of authorization is prompt) autorization to use the location capability.\n   * @since 1.0.0\n   */\n  requestPermission(): Promise<{ value: PermissionState }>;\n\n  /**\n   * method that disconnects from the wifi network if the network was connected to using one of the connect methods.\n   * @since 1.0.0\n   */\n  disconnect(): Promise<{ value: boolean }>;\n\n  /**\n   * ONLY ANDROID\n   * returns the current SSID connected by Application\n   * WARNING: app is restricted to 4 scans every 2 minutes\n   * @since 5.1.0\n   */\n  getSSIDs(): Promise<{ value: string[]; status: ConnectState }>;\n\n  /**\n   * returns the current SSID connected by Application\n   * @since 5.1.0\n   */\n  getAppSSID(): Promise<{ value: string; status: ConnectState }>;\n\n  /**\n   * iOS >= 14, Android >=9:\n   *\n   * returns the current SSID connected by device\n   * @since 5.1.0\n   */\n  getDeviceSSID(): Promise<{ value: string; status: ConnectState }>;\n\n  /**\n   * method attempts to connect to wifi matching explicitly the ssid parameter\n   * WARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)\n   * @since 1.0.0\n   */\n  connect(options: {\n    ssid: string;\n    saveNetwork?: boolean;\n  }): Promise<{ value: ConnectState }>;\n\n  /**\n   * method attempts to connect to the nearest wifi network with the ssid prefix matching the ssidPrefix parameter.\n   * WARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)\n   * @since 1.0.0\n   */\n  prefixConnect(options: {\n    ssid: string;\n    saveNetwork?: boolean;\n  }): Promise<{ value: ConnectState }>;\n\n  /**\n   * method attempts to connect to wifi matching explicitly the ssid parameter.\n   * This will fail if the password doesn't match or the isWep parameter isn't set correctly.\n   * Android does not support WEP Networks.\n   * WARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)\n   * @since 1.0.0\n   */\n  secureConnect(options: {\n    ssid: string;\n    password: string;\n    saveNetwork?: boolean;\n    isWep?: boolean;\n    // isWpa3?: boolean; TODO: to be introduced on iOS\n  }): Promise<{ value: ConnectState }>;\n\n  /**\n   * method attempts to connect to the nearest\n   * wifi network with the ssid prefix matching the ssidPrefix parameter.\n   * This will fail if the password doesn't match or the isWep parameter\n   * isn't set correctly. Android does not support WEP Networks.\n   * WARNING: saveNetwork is enabled by default on iOS and cannot be disabled due Apple's bug. (https://forums.developer.apple.com/forums/thread/700612)\n   * @since 1.0.0\n   */\n  securePrefixConnect(options: {\n    ssid: string;\n    password: string;\n    saveNetwork?: boolean;\n    isWep?: boolean;\n    // isWpa3?: boolean; TODO: to be introduced on iOS\n  }): Promise<{ value: ConnectState }>;\n}\n\nexport enum ConnectState {\n  Ok = 0,\n  Denied = -1,\n  Ko = -2,\n  UnknowSsid = -3,\n  WifiDisabled = -4,\n  AppLocalizationPermission = -5,\n  SystemLocalizationPermission = -6,\n}\n"]}